{"ast":null,"code":"var _jsxFileName = \"C:\\\\React Basics\\\\password-generator\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport { useState } from 'react';\nimport { LC, NC, SC, UC } from './Data/PassChar';\nimport { ToastContainer } from 'react-toastify';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  let [uppercase, setUppercase] = useState(false);\n  let [lowercase, setLowercase] = useState(false);\n  let [number, setNumber] = useState(false);\n  let [symbols, setSymbols] = useState(false);\n  let [passwordlen, setPasswordlen] = useState(10);\n  let [fPAss, setfPass] = useState('');\n  let createPassword = () => {\n    let finalPass = '';\n    let charset = '';\n    if (uppercase || lowercase || number || symbols) {\n      if (uppercase) charset += UC;\n      if (lowercase) charset += LC;\n      if (number) charset += NC;\n      if (symbols) charset += SC;\n      for (let i = 0; i < passwordlen; i++) {\n        finalPass += charset.charAt(Math.floor(Math.random() * charset.length));\n      }\n      setfPass(finalPass);\n    } else {\n      alert('Please select atleast one checkbox');\n      toast.success(\"Success Notification !\");\n    }\n  };\n  let copyPass = () => {\n    navigator.clipboard.writeText(fPAss);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"passwordBox\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Password Generator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"passwordBoxin\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: fPAss,\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: copyPass,\n          children: \"Copy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 50\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"passLength\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password Length\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          max: 20,\n          min: 10,\n          value: passwordlen,\n          onChange: event => setPasswordlen(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"passLength\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Include Upper Case Letters\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: uppercase,\n          onChange: () => setUppercase(!uppercase)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"passLength\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Include Lower Case Letters\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: lowercase,\n          onChange: () => setLowercase(!lowercase)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"passLength\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Include Numbers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: number,\n          onChange: () => setNumber(!number)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"passLength\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Include Symbols\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: symbols,\n          onChange: () => setSymbols(!symbols)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: createPassword,\n        children: \"Generate Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"IQA7Wk/HvA7o6DsDMY4l4ZLaOao=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","useState","LC","NC","SC","UC","ToastContainer","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","uppercase","setUppercase","lowercase","setLowercase","number","setNumber","symbols","setSymbols","passwordlen","setPasswordlen","fPAss","setfPass","createPassword","finalPass","charset","i","charAt","Math","floor","random","length","alert","toast","success","copyPass","navigator","clipboard","writeText","children","fileName","_jsxFileName","lineNumber","columnNumber","className","type","value","readOnly","onClick","max","min","onChange","event","target","checked","_c","$RefreshReg$"],"sources":["C:/React Basics/password-generator/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport {useState } from 'react';\nimport { LC, NC, SC, UC } from './Data/PassChar';\nimport { ToastContainer } from 'react-toastify';\n\nfunction App() {\n\n  let [uppercase, setUppercase] = useState(false)\n    let [lowercase, setLowercase] = useState(false)\n      let [number, setNumber] = useState(false)\n        let [symbols, setSymbols] = useState(false)\n        let [passwordlen,setPasswordlen] = useState(10)\n        let[fPAss, setfPass] = useState('')\n\n\n        let createPassword=()=>{\n          let finalPass=''\n          let charset =''\n          if(uppercase||lowercase||number||symbols){\n            if(uppercase)charset+=UC;\n            if(lowercase)charset+=LC;\n            if(number)charset+=NC;\n            if(symbols)charset+=SC\n            for(let i=0;i<passwordlen;i++){\n             finalPass+= charset.charAt(Math.floor(Math.random()*charset.length))\n            }\n             setfPass(finalPass)\n          \n          }\n          else{\n            alert('Please select atleast one checkbox')\n            toast.success(\"Success Notification !\")\n          }\n        }\nlet copyPass=()=>{\n  navigator.clipboard.writeText(fPAss)\n}\n  return (\n  <>\n   <ToastContainer/>\n  <div className='passwordBox'>\n    <h3>Password Generator</h3>\n    <div className='passwordBoxin'>\n      <input type='text' value={fPAss} readOnly/><button onClick={copyPass}>Copy</button>\n    </div>\n    <div className='passLength'>\n      <label>Password Length</label>\n      <input type='number' max={20} min={10}value={passwordlen} onChange={(event)=> setPasswordlen(event.target.value)}/>\n    </div>\n     <div className='passLength'>\n      <label>Include Upper Case Letters</label>\n      <input type='checkbox'  checked={uppercase} onChange={()=>setUppercase(!uppercase)}/>\n    </div>\n      <div className='passLength'>\n      <label>Include Lower Case Letters</label>\n      <input type='checkbox' checked={lowercase} onChange={()=>setLowercase(!lowercase)}/>\n    </div>\n      <div className='passLength'>\n      <label>Include Numbers</label>\n      <input type='checkbox' checked={number} onChange={()=>setNumber(!number)}/>\n    </div>\n      <div className='passLength'>\n      <label>Include Symbols</label>\n      <input type='checkbox' checked={symbols} onChange={()=>setSymbols(!symbols)}/>\n    </div>\n    <button className='btn' onClick={createPassword}>Generate Password</button>\n  </div>\n  </>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}